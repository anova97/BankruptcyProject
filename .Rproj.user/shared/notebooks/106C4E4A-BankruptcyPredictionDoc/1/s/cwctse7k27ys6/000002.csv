"0","## drzewa decyzyjne"
"0","precis<-c()"
"0","recal<-c()"
"0","accura<-c()"
"0","for(i in 1:10)"
"0","{"
"0","  training_sample <- sample(c(TRUE, FALSE), nrow(Xyear), replace = T, prob = c(0.7,0.3))"
"0","  train <- Xyear[training_sample, ]"
"0","  test <- Xyear[!training_sample, ]"
"0","  tree.rose<-train(class ~., data = train, method = ""rpart"","
"0","                   trControl = trainControl(method = ""cv"","
"0","                                            number = 10,"
"0","                                            summaryFunction = twoClassSummary,"
"0","                                            classProbs = TRUE), metric=""ROC"")"
"0","  #tree.rose <- rpart(class ~ ., data = train)"
"0","  "
"0","  pred.tree.rose <- predict(tree.rose, newdata = test)"
"0","  "
"0","  porownanie<-data.frame(""wartosc""=test$class, ""tree""=pred.tree.rose)"
"0","  #porownanie$tree<-ifelse(porownanie$tree==0,""a0.Wyplacalny"", ""a1.Bankrut"")"
"0","  "
"0","  precis[i]<-recallBankrut(table(porownanie$wartosc, porownanie$tree))[1]"
"0","  recal[i]<-recallBankrut(table(porownanie$wartosc, porownanie$tree))[2]"
"0","  accura[i]<-recallBankrut(table(porownanie$wartosc, porownanie$tree))[3]"
"0","}"
"0",""
"0",""
"0","porownanieMetod1r2[2,1]<-""Drzewo decyzyjne"""
"0","porownanieMetod1r2[2,2]<-mean(precis)"
"0","porownanieMetod1r2[2,3]<-mean(recal)"
"0","porownanieMetod1r2[2,4]<-mean(accura)"
"0","porownanieMetod1r2[2,5]<-2*(porownanieMetod1r2[2,2]*porownanieMetod1r2[2,3]/(porownanieMetod1r2[2,2]+porownanieMetod1r2[2,3]))"
"0",""
"0","porownanieMetod1r2[2,2:5]<-round(porownanieMetod1r2[2,2:5],4)"
"0",""
"0","porownanieMetod1r2[2,] %>% regulartable()"
